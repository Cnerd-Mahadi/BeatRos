//Display mixins

@mixin flex-row($align: center, $justify: center, $gap: 2rem) {
	display: flex;
	flex-direction: row;
	align-items: $align;
	justify-content: $justify;
	gap: $gap;
}

@mixin flex-col($align: center, $justify: center, $gap: 1.2rem) {
	display: flex;
	flex-direction: column;
	align-items: $align;
	justify-content: $justify;
	gap: $gap;
}

@mixin space-between($align: center) {
	@include flex-row($align, space-between, 1rem);
}

//Space mixins

@mixin mx($xl, $xr) {
	margin-left: $xl;
	margin-right: $xr;
}

@mixin my($yt, $yb) {
	margin-top: $yt;
	margin-bottom: $yb;
}

@mixin px($xl, $xr) {
	padding-left: $xl;
	padding-right: $xr;
}

@mixin py($yt, $yb) {
	padding-top: $yt;
	padding-bottom: $yb;
}

//Image mixins

@mixin icon($size: 2.25rem) {
	width: $size;
	height: $size;
}

@mixin fit-image($width: 22rem, $height: 22rem) {
	width: $width;
	height: $height;
	object-fit: cover;
}

@mixin width-image($width: 100%) {
	max-width: $width;
	object-fit: cover;
}

// Utils mixins

@mixin link($color: $white, $hover: $red) {
	@include transition;

	color: $color;
	cursor: pointer;

	&:hover {
		color: $hover;
	}
}

@mixin scaled($scale: 1.05) {
	@include transition;

	&:hover {
		transform: scale($scale);
	}
}

@mixin transition($time: 0.2s) {
	transition: all $time ease-in-out;
}

// Media queries mixins

@mixin response($screen) {
	@if ($screen == xl) {
		@media (max-width: map-get($breakpoints, "largest")) {
			@content;
		}
	} @else if ($screen == lg) {
		@media (max-width: map-get($breakpoints, "large")) {
			@content;
		}
	} @else if($screen == md) {
		@media (max-width: map-get($breakpoints, "medium")) {
			@content;
		}
	} @else if($screen == sm) {
		@media (max-width: map-get($breakpoints, "small")) {
			@content;
		}
	} @else if($screen == xs) {
		@media (max-width: map-get($breakpoints, "smallest")) {
			@content;
		}
	}
}
